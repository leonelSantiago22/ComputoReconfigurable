// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "04/18/2022 11:56:40"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module counter_c (
	clk,
	reset,
	q);
input 	clk;
input 	reset;
output 	[3:0] q;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \q[0]~output_o ;
wire \q[1]~output_o ;
wire \q[2]~output_o ;
wire \q[3]~output_o ;
wire \clk~input_o ;
wire \reset~input_o ;
wire \q~0_combout ;
wire \q[0]~reg0_q ;
wire \q~1_combout ;
wire \q[1]~reg0_q ;
wire \q~2_combout ;
wire \q[2]~reg0_q ;
wire \q~3_combout ;
wire \q[3]~reg0_q ;


cyclonev_io_obuf \q[0]~output (
	.i(\q[0]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[0]~output .bus_hold = "false";
defparam \q[0]~output .open_drain_output = "false";
defparam \q[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \q[1]~output (
	.i(\q[1]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[1]~output .bus_hold = "false";
defparam \q[1]~output .open_drain_output = "false";
defparam \q[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \q[2]~output (
	.i(\q[2]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[2]~output .bus_hold = "false";
defparam \q[2]~output .open_drain_output = "false";
defparam \q[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \q[3]~output (
	.i(\q[3]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[3]~output .bus_hold = "false";
defparam \q[3]~output .open_drain_output = "false";
defparam \q[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \q~0 (
// Equation(s):
// \q~0_combout  = (!\q[0]~reg0_q  & !\reset~input_o )

	.dataa(!\q[0]~reg0_q ),
	.datab(!\reset~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\q~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \q~0 .extended_lut = "off";
defparam \q~0 .lut_mask = 64'h8888888888888888;
defparam \q~0 .shared_arith = "off";
// synopsys translate_on

dffeas \q[0]~reg0 (
	.clk(\clk~input_o ),
	.d(\q~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\q[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \q[0]~reg0 .is_wysiwyg = "true";
defparam \q[0]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \q~1 (
// Equation(s):
// \q~1_combout  = (!\reset~input_o  & (!\q[0]~reg0_q  $ (!\q[1]~reg0_q )))

	.dataa(!\q[0]~reg0_q ),
	.datab(!\q[1]~reg0_q ),
	.datac(!\reset~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\q~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \q~1 .extended_lut = "off";
defparam \q~1 .lut_mask = 64'h6060606060606060;
defparam \q~1 .shared_arith = "off";
// synopsys translate_on

dffeas \q[1]~reg0 (
	.clk(\clk~input_o ),
	.d(\q~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\q[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \q[1]~reg0 .is_wysiwyg = "true";
defparam \q[1]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \q~2 (
// Equation(s):
// \q~2_combout  = (!\reset~input_o  & (!\q[2]~reg0_q  $ (((!\q[0]~reg0_q ) # (!\q[1]~reg0_q )))))

	.dataa(!\q[0]~reg0_q ),
	.datab(!\q[1]~reg0_q ),
	.datac(!\q[2]~reg0_q ),
	.datad(!\reset~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\q~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \q~2 .extended_lut = "off";
defparam \q~2 .lut_mask = 64'h1E001E001E001E00;
defparam \q~2 .shared_arith = "off";
// synopsys translate_on

dffeas \q[2]~reg0 (
	.clk(\clk~input_o ),
	.d(\q~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\q[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \q[2]~reg0 .is_wysiwyg = "true";
defparam \q[2]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \q~3 (
// Equation(s):
// \q~3_combout  = ( !\reset~input_o  & ( !\q[3]~reg0_q  $ (((!\q[0]~reg0_q ) # ((!\q[1]~reg0_q ) # (!\q[2]~reg0_q )))) ) )

	.dataa(!\q[0]~reg0_q ),
	.datab(!\q[1]~reg0_q ),
	.datac(!\q[2]~reg0_q ),
	.datad(!\q[3]~reg0_q ),
	.datae(!\reset~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\q~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \q~3 .extended_lut = "off";
defparam \q~3 .lut_mask = 64'h01FE000001FE0000;
defparam \q~3 .shared_arith = "off";
// synopsys translate_on

dffeas \q[3]~reg0 (
	.clk(\clk~input_o ),
	.d(\q~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\q[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \q[3]~reg0 .is_wysiwyg = "true";
defparam \q[3]~reg0 .power_up = "low";
// synopsys translate_on

assign q[0] = \q[0]~output_o ;

assign q[1] = \q[1]~output_o ;

assign q[2] = \q[2]~output_o ;

assign q[3] = \q[3]~output_o ;

endmodule
